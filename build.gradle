buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url = 'https://files.minecraftforge.net/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'

Project onelib = project(":OneLib")

version = "${onelib.minecraft_version}-${mod_version}.${build_num}"
group = "${onelib.mod_group}"
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: onelib.mappings_channel, version: onelib.mappings_version
    // accessTransformer = file('src/main/resources/META-INF/theora_at.cfg')
    runs {
        client = {
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            workingDirectory project.file('run').canonicalPath
        }
    }
}

dependencies {
    minecraft "${onelib.forge_group}:${onelib.forge_name}:${onelib.minecraft_version}-${onelib.forge_version}"
    compile "${onelib.forge_group}:${onelib.forge_name}:${onelib.minecraft_version}-${onelib.forge_version}:launcher"
    compile onelib
}

tasks.withType(Jar) {
    def jarsDir = file("$projectDir/../jars/${mod_name}")
    if (!jarsDir.exists()) {
        jarsDir.mkdirs()
    }
    destinationDir = jarsDir
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', onelib.minecraft_version
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'
        expand 'version': project.version, 'mcversion': onelib.minecraft_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}
